#!/usr/bin/env ruby

require "bundler/setup"
require "zvv/cli"
require 'gli'
require 'transprt'
require 'ostruct'

module Patches
	refine String do
		def strftime
			DateTime.iso8601(self).strftime('%H:%M')
		end
	end
end

# https://gist.github.com/pmarreck/5349411
module HashToOpenstruct
	def to_ostruct
		OpenStruct.new(self).tap do |o|
			each.with_object(o) do |(k,v), o|
				o.send(:"#{k}=", v.to_ostruct) if v.is_a?(Hash) || v.is_a?(Array)
			end
		end
	end
end

class Array
	def to_ostruct
		map { |_|
			if _.is_a?(Hash) || _.is_a?(Array)
				_.to_ostruct
			else
				_
			end
		}
	end
end

Hash.include HashToOpenstruct

using Patches

include GLI::App

program_desc 'ZVV and Swiss Open Data public transport utility'

version Zvv::Cli::VERSION
subcommand_option_handling :normal

desc 'Find connection between two destinations'
arg_name 'from to'
command :connection do |c|
	c.desc 'Describe a switch to bar'
	c.switch :s

	c.desc 'Describe a flag to bar'
	c.default_value 'default'
	c.flag :f
	c.action do |global_options, options, args|

		# Your command logic here

		# If you have any errors, just raise them
		# raise "that command made no sense"

		connections = Transprt.connections(from: args.first, to: args.last).to_ostruct
		connections.each do |c|
			#byebug
			puts "%s %s ---> %s %s" % [c.from.station.name, c.from.departure.strftime, c.to.station.name, c.to.arrival.strftime]
			c.sections.each do |s|
				puts s.journey.name
				puts s.journey.to
				puts "%s %s ---> %s %s" % [s.departure.station.name, s.departure.departure.strftime, s.arrival.station.name, s.arrival.arrival.strftime]
			end
		end
	end
end

exit run(ARGV)
